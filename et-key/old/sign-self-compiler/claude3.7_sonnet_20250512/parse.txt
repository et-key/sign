{
  "ast": {
    "type": "N4sign11ProgramNodeE",
    "representation": "プログラム[
  二項演算(:, 識別子(x), 数値( 10)),
  二項演算(:, 識別子(y), 数値( 20)),
  二項演算(:, 識別子(z), 二項演算(+, 識別子( x), 識別子( y))),
  二項演算(:, 識別子(hello), 文字列( `Hello`)),
  二項演算(:, 識別子(world), 文字列( `World`)),
  二項演算(:, 識別子(sum), 二項演算(+, 識別子( x), 識別子( y))),
  二項演算(:, 識別子(product), 二項演算(*, 識別子( x), 識別子( y))),
  二項演算(:, 識別子(power), 二項演算(^, 識別子( x), 数値( 2))),
  二項演算(:, 識別子(complex_calc), 二項演算(*, 二項演算(+, 数値(2), 数値( 3)), 二項演算(-, 数値(4), 数値( 1)))),
  二項演算(:, 識別子(is_valid), 二項演算(&, 二項演算(>=, 識別子( x), 数値( 0)), 二項演算(<=, 識別子( y), 数値( 100)))),
  二項演算(:, 識別子(logical_test), 二項演算(|, 二項演算(&, 二項演算(>, 識別子( x), 数値( 0)), 二項演算(<, 識別子( y), 数値( 50))), 二項演算(=, 識別子( z), 数値( 30)))),
  二項演算(:, 識別子(negative), 前置演算(-, 数値(10))),
  二項演算(:, 識別子(not_value), 前置演算(!, 識別子(true))),
  二項演算(:, 識別子(add), 識別子( a)),
  二項演算(:, 識別子(multiply), 識別子( a)),
  二項演算(:, 識別子(square), ラムダ([識別子( x)], 二項演算(*, 識別子( x), 識別子( x)))),
  二項演算(:, 識別子(result), 識別子( add))
]"
  }
}
