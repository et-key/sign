テスト例1: 基本的なリテラルとトークンの検証
---------------
`これはコメントです

5
\+
`hello world`
x
_
---------------
このテストでは:

コメント行
数値リテラル
文字リテラル（バックスラッシュの次の文字）
文字列リテラル
識別子
単位元（_）

を検証できます。

テスト例2: 演算子の検証
---------------
Copy+ - * / % ^ !
< <= = >= > !=
| & ; :
# @ ? , ~ '
---------------
このテストでは、各種演算子が正しくトークン化されるかを検証できます。

テスト例3: ブロック構造の検証
---------------
Copy[1 2 3]
{x y ? x + y}
(a b)

	インデントされたブロック
	x : 5
---------------
このテストでは:

インライン型のブロック構造（[], {}, ()）
タブによるブロック構造
定義演算子（:）

を検証できます。

テスト例4: 複合的な例
---------------
Copyfib : n ?
	n <= 1 : n
	_ : fib (n - 1) + fib (n - 2)

sum : [+]

map : f ~xs ?
	xs = _ : _
	[x ~rest ? f x, map f rest~] xs~

`テスト実行
fib 10
map [\x ? x * 2] [1 ~ 5]
---------------
このテストでは:

関数定義
条件分岐
リスト操作
スプレッド演算子（~）
範囲リスト構築（~）
複数行にわたる構造

など、より複雑な構造を検証できます。

テスト例5: 特殊ケースの検証
---------------
Copy`エラーケース（閉じていない文字列）
`これは閉じない

`行途中からのバッククォート
x : `これは文字列`

`タブ以外の位置でのタブ（エラー）
x : 	タブ付き値
---------------
このテストでは、エラー処理が正しく機能するかを検証できます。ただし、エラーテストは個別に実行する必要があります。
これらのテスト例は、字句解析器の各機能を検証するのに役立ちます。必要に応じて特定の機能に焦点を当てたより具体的なテストケースを追加することもできます。