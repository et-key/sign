` Sign言語サンプルコード - 数学関数ライブラリ

` 基本的な数学関数
increment : _0 ? _0 + 1
decrement : _0 ? _0 - 1
double : _0 ? _0 * 2
square : _0 ? _0 ^ 2

` 二項演算関数 
add : _0 _1 ? _0 + _1
subtract : _0 _1 ? _0 - _1
multiply : _0 _1 ? _0 * _1
divide : _0 _1 ? _0 / _1
power : _0 _1 ? _0 ^ _1

` 条件分岐を含む関数
absolute : _0 ? 
	_0 >= 0 & _0 | 
	-_0
classify : _0 ? 
	_0 = 0 & `zero` | 
	_0 > 0 & `positive` | 
	_0 < 0 & `negative`
grade : _0 ? 
	_0 >= 90 & `A` | 
	_0 >= 80 & `B` | 
	_0 >= 70 & `C` | 
	_0 >= 60 & `D` | 
	`F`
` 再帰関数
#factorial : _0 ? 
	_0 <= 1 & 1 | 
	_0 * factorial(_0 - 1)
fibonacci : _0 ? 
	_0 <= 1 & _0 | 
	fibonacci(_0 - 1) + fibonacci(_0 - 2)
` 高階関数（リスト処理）
map : _0 _1 ~_2 ? 
	!_1 & _ | 
	@_0 _1 , map _0 _2~
fold : _0 _1 _2 ~_3 ? 
	!_2 & _1 | 
	fold _0 (@_0 _1 _2) _3~
` エクスポートされた関数
#sum : _0 ? fold [ + ] 0 _0
#product : _0 ? fold [ * ] 1 _0
#length : _0 ? fold [_0 _1 ? _1 + 1] 0 list

` 実用的な関数
max : _0 _1 ? 
	_0 > _1 & _0 | 
	_1
min : _0 _1 ? 
	_0 < _1 & _0 | 
	_1
clamp : _0 _1 _2 ? 
	_0 < _1 & _1 | 
	_0 > _2 & _2 | 
	_0
` ユーティリティ関数
isEven : _0 ? _0 % 2 = 0
isOdd : _0 ? _0 % 2 = 1
isPrime : _0 ? 
	_0 <= 1 & _ | 
	_0 = 2 & _0 | 
	_0 % 2 = 0 & _ | 
	checkPrime _0 3
checkPrime : _0 _1 ? 
	_1 * _1 > _0 & _0 | 
	_0 % _1 = 0 & _ | 
	checkPrime _0 (_1 + 2)