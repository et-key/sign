
` ###############################################
` # Phase 1
` ###############################################

divide_test : x y ? x / y
multi_op : a b c ? ( a + b ) - ( a * c )

` ###############################################
` # Phase 2-1
` ###############################################

` Unit値基本処理テスト

` テスト1: Unit値を返すだけの定数（引数無しラムダはNG）
return_unit : _

` テスト2: identity関数（引数をそのまま返す）
identity_unit : x ? x

` テスト4: 数値とUnit値の混在
mixed_test : x y ? x


` 実際の使用例（後でテスト可能）

` Unit値が返される
test1 : return_unit

` 42が返される  
test2 : identity_unit 42

` Unit値が返される
test3 : identity_unit _

` 10が返される
test5 : mixed_test 10 _

` Unit値が返される
test6 : mixed_test _ 20

` ###############################################
` # Phase 2-2
` ###############################################

` 文字列実装後の比較テストケース
grade : score ?
	score >= 90 : `A`
	80 <= score : `B`
	score >= 70 : `C`
	`F`

status : user ?
	user = `admin` : `full_access`
	user = `user` : `basic_access`
	`no_access`


` ###############################################
` # Phase 2-2-1
` ###############################################

` 標準出力用先行実装
show_message : msg ?
	0x1 # msg
show_message `hello`

0x1 # ` wold!\n`

