increment : _0 ? _0 + 1
add : _0 _1 ? _0 + _1
L : _0 ? _0
R : _0 ~_1 ? _1
map : _0 _1 ~_2 ? @_0 _1 , map _0 _2~
foldr : _0 _1 _2 ~_3 ? 
	 !_2 : _1 
	 @_0 _2 foldr _0 _1 _3~
twice : _0 ? _0 _0
flip : _0 _1 _2 ? _0 _2 _1
f : _0 _1 _2 ? _0 * _1 + _2
g : _0 ? f 2 _0 3
g2 : _0 _1 ? f _0 5 _1
add : [ + ]
mul : [ * ]
sub : [ - ]
result1 : [ + ] 5 7
result2 : [ * ] 3 4
result3 : [ - ] 10 2
pow2 : [ ^ 2 ]
inc : [ + 1 ]
half : [ / 2 ]
square_and_add_ten : [ [ ^ 2 ] ] [ + 10 ]
value1 : [ + 1 ] 5
value2 : [ ^ 2 ] 4
value3 : square_and_add_ten 3
value4 : [ [ + 1 ] ] [ [ ^ 2 ] ] 4
add_n : _0 ? [ + ] _0
mul_by : _0 ? _0 [ * ]
between : _0 _1 _2 ? _0 < _1 < _2
add5 : add_n 5
triple : mul_by 3
in_range : _0 ? between 0 _0 100
value5 : add5 10
value6 : triple 7
valid : in_range 42
map_1 : [ * 2 , ]
filter : [ > 5 , ]
reduce : [ + ]
doubled : [ * 2 , ] 1 2 3 4
filtered : [ > 5 , ] 3 7 2 9
sum : [ + ] 1 2 3 4
average : _0 _1 ? [ / ] [ + ] _0 [ length _1 ]
square_sum : _0 ? [ + ] [ [ ^ 2 , ] _0 ]
apply_twice : _0 ? _0 _0
avg_value : average 1 2 3 4
squares : square_sum 1 2 3
twice_inc : apply_twice [ + 1 ]
value7 : twice_inc 5
compose : _0 _1 ? _0 _1 _
identity : _0 ? _0
nop : _
inc_then_double : compose [ * ] [ + 1 ]
pass_through : identity 42
empty : _