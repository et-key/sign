`以下の構文はシンタックスエラーのサンプルケース。


`比較演算同士の優先順位は存在しない。
`比較演算の型は…
`Number -> Number -> [Number | Unit]
`これによりブロックによる優先順位にかかわらず結果が安全に補足可能となった。
`なお、Unitを渡された関数はラムダ式に変化するが、そのラムダ式が即時評価されないならばUnitと同意である。

`前置演算子と後置演算子は、空白を入れてはならない。`

`否定`

! 1
! 0

`rest operator`

~ list

`spread operator`

list ~

`階乗`

n !

`back_quortが含まれる文字列の定義`

`` is a Syntax Error`


`sign言語には文字列内のエスケープシーケンスが存在しない。`
`sign言語のエスケープとは、文字型の事と同義であるため、以下はNG`

`\`is a Syntax Error`

`~演算子系
`スコープをこれ以上上に持っていくことが出来ないなら、後置~は無視される。

e0 : [1 ~ 5]~

`ブロック構文外での、中置~は原則NG、ただし単項式は例外で許容する。（単項式をブロックに入れなくて良い仕様については、追加機能とする。）

e1 : [+] 1 ~ 5

`対象がリストまたはラムダとなる中置~はNG、代わりに空白で区切ればリストが結合される。（これはTypeErrorだろうな…）
e2 : [[1 ~ 5] ~ [6 ~ 10]]

`LISPのS式になぞらえた仕様なので、中置演算に空白が無く、他の演算子と区分がつかないものはNG
`下の式では、絶対値算出ブロックなのかor演算子なのか区別ができない。
`絶対値ブロックは対象となる式の前後に空白は入らない。
`絶対値ブロックがラムダを取ることはない。`
`絶対値ブロックがリストを閉包する場合、リスト内部の値を全て絶対値にする。`

e3 : 1 + | -2 | - 3
e4 : 1|-2|3
